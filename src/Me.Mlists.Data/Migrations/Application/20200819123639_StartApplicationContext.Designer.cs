// <auto-generated />
using System;
using Me.Mlists.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Me.Mlists.Data.Migrations.Application
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20200819123639_StartApplicationContext")]
    partial class StartApplicationContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Me.Mlists.Models.Convidado", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("convidado_id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("ConvidadoPorId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("DataEnvio")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataResposta")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EmailConvite")
                        .IsRequired()
                        .HasColumnName("email_convidado")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<bool?>("IsAceitou")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ListaId")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("ListaId");

                    b.ToTable("mltb_convidados");
                });

            modelBuilder.Entity("Me.Mlists.Models.Lista", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("lista_id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("CriadoPorId")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ListaStatus")
                        .HasColumnType("int");

                    b.Property<int>("MonsterId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("MonsterId");

                    b.ToTable("mltb_listas");
                });

            modelBuilder.Entity("Me.Mlists.Models.ListaSecao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("lista_secao_id")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(60) CHARACTER SET utf8mb4")
                        .HasMaxLength(60);

                    b.Property<string>("ListaId")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("ListaId");

                    b.ToTable("mltb_lista_secoes");
                });

            modelBuilder.Entity("Me.Mlists.Models.Monster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("monster_id")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("varchar(60) CHARACTER SET utf8mb4")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("mltb_monsters");
                });

            modelBuilder.Entity("Me.Mlists.Models.Participante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("participante_id")
                        .HasColumnType("int");

                    b.Property<string>("ListaId")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int>("ParticipantePerfil")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("ListaId");

                    b.ToTable("mltb_participantes");
                });

            modelBuilder.Entity("Me.Mlists.Models.Tarefa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tarefa_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataVencimento")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsChecked")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsLixeira")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ListaId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int?>("ListaSecaoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<int>("ParticipanteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ListaId");

                    b.HasIndex("ListaSecaoId");

                    b.HasIndex("ParticipanteId");

                    b.ToTable("mltb_tarefas");
                });

            modelBuilder.Entity("Me.Mlists.Models.Convidado", b =>
                {
                    b.HasOne("Me.Mlists.Models.Lista", "Lista")
                        .WithMany("Convidados")
                        .HasForeignKey("ListaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Me.Mlists.Models.Lista", b =>
                {
                    b.HasOne("Me.Mlists.Models.Monster", "Monster")
                        .WithMany("Listas")
                        .HasForeignKey("MonsterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Me.Mlists.Models.ListaSecao", b =>
                {
                    b.HasOne("Me.Mlists.Models.Lista", "Lista")
                        .WithMany("ListaSecaos")
                        .HasForeignKey("ListaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Me.Mlists.Models.Participante", b =>
                {
                    b.HasOne("Me.Mlists.Models.Lista", "Lista")
                        .WithMany("Participantes")
                        .HasForeignKey("ListaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Me.Mlists.Models.Tarefa", b =>
                {
                    b.HasOne("Me.Mlists.Models.Lista", "Lista")
                        .WithMany("Tarefas")
                        .HasForeignKey("ListaId");

                    b.HasOne("Me.Mlists.Models.ListaSecao", "ListaSecao")
                        .WithMany("Tarefas")
                        .HasForeignKey("ListaSecaoId");

                    b.HasOne("Me.Mlists.Models.Participante", "Participante")
                        .WithMany("Tarefas")
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
